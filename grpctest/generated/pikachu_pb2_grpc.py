# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpctest.generated.dmp_pb2 as dmp__pb2
import grpctest.generated.search_pb2 as search__pb2


class DmpCharmanderServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.queryAssetMarketDataSeries = channel.unary_unary(
        '/DmpCharmanderService/queryAssetMarketDataSeries',
        request_serializer=dmp__pb2.AssetDataRequest.SerializeToString,
        response_deserializer=dmp__pb2.AssetMarketDataSeries.FromString,
        )
    self.search = channel.unary_unary(
        '/DmpCharmanderService/search',
        request_serializer=search__pb2.SearchRequest.SerializeToString,
        response_deserializer=dmp__pb2.SearchResult.FromString,
        )
    self.retrieveAssetId = channel.unary_unary(
        '/DmpCharmanderService/retrieveAssetId',
        request_serializer=dmp__pb2.RetrieveAssetIdRequest.SerializeToString,
        response_deserializer=dmp__pb2.RetrieveAssetIdResult.FromString,
        )
    self.retrieveCurrencyRate = channel.unary_unary(
        '/DmpCharmanderService/retrieveCurrencyRate',
        request_serializer=dmp__pb2.RetrieveCurrencyRateRequest.SerializeToString,
        response_deserializer=dmp__pb2.RetrieveCurrencyRateResult.FromString,
        )
    self.retrieveHistoryCurrencyRate = channel.unary_unary(
        '/DmpCharmanderService/retrieveHistoryCurrencyRate',
        request_serializer=dmp__pb2.RetrieveHistoryCurrencyRateRequest.SerializeToString,
        response_deserializer=dmp__pb2.RetrieveHistoryCurrencyRateResult.FromString,
        )
    self.queryAsset = channel.unary_unary(
        '/DmpCharmanderService/queryAsset',
        request_serializer=dmp__pb2.AssetRequest.SerializeToString,
        response_deserializer=dmp__pb2.AssetResult.FromString,
        )
    self.queryTrashAsset = channel.unary_unary(
        '/DmpCharmanderService/queryTrashAsset',
        request_serializer=dmp__pb2.AssetRequest.SerializeToString,
        response_deserializer=dmp__pb2.AssetResult.FromString,
        )
    self.queryLastAssetMarketDataSeries = channel.unary_unary(
        '/DmpCharmanderService/queryLastAssetMarketDataSeries',
        request_serializer=dmp__pb2.AssetDataRequest.SerializeToString,
        response_deserializer=dmp__pb2.AssetMarketDataSeries.FromString,
        )
    self.createUserProduct = channel.unary_unary(
        '/DmpCharmanderService/createUserProduct',
        request_serializer=dmp__pb2.CreateUserProductRequest.SerializeToString,
        response_deserializer=dmp__pb2.CreateUserProductResult.FromString,
        )
    self.updateUserProduct = channel.unary_unary(
        '/DmpCharmanderService/updateUserProduct',
        request_serializer=dmp__pb2.UpdateUserProductRequest.SerializeToString,
        response_deserializer=dmp__pb2.UpdateUserProductResult.FromString,
        )
    self.deleteUserProduct = channel.unary_unary(
        '/DmpCharmanderService/deleteUserProduct',
        request_serializer=dmp__pb2.DeleteUserProductRequest.SerializeToString,
        response_deserializer=dmp__pb2.DeleteUserProductResult.FromString,
        )
    self.checkUserProductExist = channel.unary_unary(
        '/DmpCharmanderService/checkUserProductExist',
        request_serializer=dmp__pb2.CheckUserProductRequest.SerializeToString,
        response_deserializer=dmp__pb2.CheckUserProductResult.FromString,
        )
    self.updateAssetMarketDataSeries = channel.unary_unary(
        '/DmpCharmanderService/updateAssetMarketDataSeries',
        request_serializer=dmp__pb2.UpdateAssetMarketDataRequest.SerializeToString,
        response_deserializer=dmp__pb2.UpdateAssetMarketDataResult.FromString,
        )
    self.listAllUserProduct = channel.unary_unary(
        '/DmpCharmanderService/listAllUserProduct',
        request_serializer=dmp__pb2.ListAllUserProductRequest.SerializeToString,
        response_deserializer=dmp__pb2.ListAllUserProductResult.FromString,
        )
    self.refreshAssetData = channel.unary_unary(
        '/DmpCharmanderService/refreshAssetData',
        request_serializer=dmp__pb2.RefreshDataRequest.SerializeToString,
        response_deserializer=dmp__pb2.RefreshDataResult.FromString,
        )
    self.listAllCountryInfo = channel.unary_unary(
        '/DmpCharmanderService/listAllCountryInfo',
        request_serializer=dmp__pb2.ListAllRequest.SerializeToString,
        response_deserializer=dmp__pb2.CountryInfoResult.FromString,
        )
    self.listAllExchangeInfo = channel.unary_unary(
        '/DmpCharmanderService/listAllExchangeInfo',
        request_serializer=dmp__pb2.ListAllRequest.SerializeToString,
        response_deserializer=dmp__pb2.ExchangeInfoResult.FromString,
        )


class DmpCharmanderServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def queryAssetMarketDataSeries(self, request, context):
    """status: Ready
    priority: high
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def search(self, request, context):
    """status: Ready
    priority:
    internal interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def retrieveAssetId(self, request, context):
    """status: Need to test
    priority: high
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def retrieveCurrencyRate(self, request, context):
    """status: Ready
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def retrieveHistoryCurrencyRate(self, request, context):
    """status: Ready
    priority: high
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryAsset(self, request, context):
    """status: Ready
    priority: high
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryTrashAsset(self, request, context):
    """status: Not Support
    priority:
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def queryLastAssetMarketDataSeries(self, request, context):
    """status: Ready
    priority: high
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createUserProduct(self, request, context):
    """status: Ready
    priority: medium
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateUserProduct(self, request, context):
    """status: Need to fix
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteUserProduct(self, request, context):
    """status: Ready
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkUserProductExist(self, request, context):
    """status: Need to test
    priority: medium
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateAssetMarketDataSeries(self, request, context):
    """status: Need to fix
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listAllUserProduct(self, request, context):
    """status: Ready
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def refreshAssetData(self, request, context):
    """status: Not Support
    priority:
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listAllCountryInfo(self, request, context):
    """status: Ready
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listAllExchangeInfo(self, request, context):
    """status: Ready
    priority: low
    external interface
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DmpCharmanderServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'queryAssetMarketDataSeries': grpc.unary_unary_rpc_method_handler(
          servicer.queryAssetMarketDataSeries,
          request_deserializer=dmp__pb2.AssetDataRequest.FromString,
          response_serializer=dmp__pb2.AssetMarketDataSeries.SerializeToString,
      ),
      'search': grpc.unary_unary_rpc_method_handler(
          servicer.search,
          request_deserializer=search__pb2.SearchRequest.FromString,
          response_serializer=dmp__pb2.SearchResult.SerializeToString,
      ),
      'retrieveAssetId': grpc.unary_unary_rpc_method_handler(
          servicer.retrieveAssetId,
          request_deserializer=dmp__pb2.RetrieveAssetIdRequest.FromString,
          response_serializer=dmp__pb2.RetrieveAssetIdResult.SerializeToString,
      ),
      'retrieveCurrencyRate': grpc.unary_unary_rpc_method_handler(
          servicer.retrieveCurrencyRate,
          request_deserializer=dmp__pb2.RetrieveCurrencyRateRequest.FromString,
          response_serializer=dmp__pb2.RetrieveCurrencyRateResult.SerializeToString,
      ),
      'retrieveHistoryCurrencyRate': grpc.unary_unary_rpc_method_handler(
          servicer.retrieveHistoryCurrencyRate,
          request_deserializer=dmp__pb2.RetrieveHistoryCurrencyRateRequest.FromString,
          response_serializer=dmp__pb2.RetrieveHistoryCurrencyRateResult.SerializeToString,
      ),
      'queryAsset': grpc.unary_unary_rpc_method_handler(
          servicer.queryAsset,
          request_deserializer=dmp__pb2.AssetRequest.FromString,
          response_serializer=dmp__pb2.AssetResult.SerializeToString,
      ),
      'queryTrashAsset': grpc.unary_unary_rpc_method_handler(
          servicer.queryTrashAsset,
          request_deserializer=dmp__pb2.AssetRequest.FromString,
          response_serializer=dmp__pb2.AssetResult.SerializeToString,
      ),
      'queryLastAssetMarketDataSeries': grpc.unary_unary_rpc_method_handler(
          servicer.queryLastAssetMarketDataSeries,
          request_deserializer=dmp__pb2.AssetDataRequest.FromString,
          response_serializer=dmp__pb2.AssetMarketDataSeries.SerializeToString,
      ),
      'createUserProduct': grpc.unary_unary_rpc_method_handler(
          servicer.createUserProduct,
          request_deserializer=dmp__pb2.CreateUserProductRequest.FromString,
          response_serializer=dmp__pb2.CreateUserProductResult.SerializeToString,
      ),
      'updateUserProduct': grpc.unary_unary_rpc_method_handler(
          servicer.updateUserProduct,
          request_deserializer=dmp__pb2.UpdateUserProductRequest.FromString,
          response_serializer=dmp__pb2.UpdateUserProductResult.SerializeToString,
      ),
      'deleteUserProduct': grpc.unary_unary_rpc_method_handler(
          servicer.deleteUserProduct,
          request_deserializer=dmp__pb2.DeleteUserProductRequest.FromString,
          response_serializer=dmp__pb2.DeleteUserProductResult.SerializeToString,
      ),
      'checkUserProductExist': grpc.unary_unary_rpc_method_handler(
          servicer.checkUserProductExist,
          request_deserializer=dmp__pb2.CheckUserProductRequest.FromString,
          response_serializer=dmp__pb2.CheckUserProductResult.SerializeToString,
      ),
      'updateAssetMarketDataSeries': grpc.unary_unary_rpc_method_handler(
          servicer.updateAssetMarketDataSeries,
          request_deserializer=dmp__pb2.UpdateAssetMarketDataRequest.FromString,
          response_serializer=dmp__pb2.UpdateAssetMarketDataResult.SerializeToString,
      ),
      'listAllUserProduct': grpc.unary_unary_rpc_method_handler(
          servicer.listAllUserProduct,
          request_deserializer=dmp__pb2.ListAllUserProductRequest.FromString,
          response_serializer=dmp__pb2.ListAllUserProductResult.SerializeToString,
      ),
      'refreshAssetData': grpc.unary_unary_rpc_method_handler(
          servicer.refreshAssetData,
          request_deserializer=dmp__pb2.RefreshDataRequest.FromString,
          response_serializer=dmp__pb2.RefreshDataResult.SerializeToString,
      ),
      'listAllCountryInfo': grpc.unary_unary_rpc_method_handler(
          servicer.listAllCountryInfo,
          request_deserializer=dmp__pb2.ListAllRequest.FromString,
          response_serializer=dmp__pb2.CountryInfoResult.SerializeToString,
      ),
      'listAllExchangeInfo': grpc.unary_unary_rpc_method_handler(
          servicer.listAllExchangeInfo,
          request_deserializer=dmp__pb2.ListAllRequest.FromString,
          response_serializer=dmp__pb2.ExchangeInfoResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DmpCharmanderService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
